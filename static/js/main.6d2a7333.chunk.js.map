{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["matrix","Array","i","Box","row","col","color","useState","boxColor","changeColor","id","toString","style","height","width","backgroundColor","onClick","e","Math","floor","random","RowBuilder","eachRow","push","display","flexDirection","MatrixBuilder","rows","cols","items","App","item","console","log","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yHAqBA,I,iEADIA,EAAS,IAAIC,MAAM,IACfC,EAAE,EAAGA,EAAE,GAAIA,IAAKF,EAAOE,GAAK,IAAID,MAAM,IAE9C,IAAME,EAAM,SAAC,GAA+B,IAA9BC,EAA6B,EAA7BA,IAAKC,EAAwB,EAAxBA,IAAKC,EAAmB,EAAnBA,MACtBN,EAAOI,GAAKC,GAAOC,EACnB,MAAgCC,mBAASD,GAAzC,mBAAOE,EAAP,KAAiBC,EAAjB,KACMC,EAAKN,EAAIO,WAAa,IAAKN,EAAIM,WACrC,OACE,8BACE,qBACED,GAAMA,EACNE,MAAO,CAACC,OAAQ,MAAOC,MAAO,MAAOC,gBAAiB,IAAI,GAAJ,OAAOP,IAC7DQ,QAAS,SAACC,GAAD,OAAOR,EAAYS,KAAKC,MAAoB,SAAdD,KAAKE,UAAmBT,SAAS,WAM1EU,EAAa,SAAC,GAElB,IAFiD,IAA9BjB,EAA6B,EAA7BA,IAAKC,EAAwB,EAAxBA,IAClBiB,EAAU,GACRpB,EAAE,EAAGA,EAAEG,EAAKH,IAClBoB,EAAQC,KAAK,8BAAK,cAAC,EAAD,CAAKnB,IAAKA,EAAKC,IAAKH,EAAGI,MAAOY,KAAKC,MAAoB,SAAdD,KAAKE,UAAmBT,SAAS,SAE9F,OACE,qBAAKC,MAAO,CAACY,QAAS,OAAQC,cAAe,OAA7C,SACGH,KAKDI,EAAgB,SAAC,GAErB,IAFkD,IAA5BC,EAA2B,EAA3BA,KAAMC,EAAqB,EAArBA,KACtBC,EAAQ,GACN3B,EAAE,EAAGA,EAAEyB,EAAMzB,IAEnB2B,EAAMN,KAAK,cAAC,EAAD,CAAYnB,IAAKF,EAAGG,IAAKuB,KAEtC,OACE,8BACGC,KAiBQC,MAZf,WACE,IACMC,EAAO,cAAC,EAAD,CAAeJ,KADpB,GAC+BC,KADvB,KAEhBI,QAAQC,IAAIjC,GACZ,MAAmCO,mBAASP,GAA5C,mBACA,OADA,UAEE,8BACG+B,KCxDQG,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.6d2a7333.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\ninterface boxProp {\n  row: number;\n  col: number;\n  color: String;\n}\n\ninterface matrixProp {\n  rows: number;\n  cols: number;\n}\n\ninterface rowBuilderProp {\n  row: number;\n  col: number;\n}\n\nlet matrix = new Array(13);\nfor(let i=0; i<13; i++) matrix[i] = new Array(25);\n\nconst Box = ({row, col, color}:boxProp) => {\n  matrix[row][col] = color;\n  const [boxColor, changeColor] = useState(color)\n  const id = row.toString() + \"$\"+ col.toString()\n  return (\n    <div>\n      <div\n        id = {id}\n        style={{height: \"2cm\", width: \"2cm\", backgroundColor: \"#\"+`${boxColor}`}}\n        onClick={(e) => changeColor(Math.floor(Math.random()*16777215).toString(16))}\n      ></div>\n    </div>\n  )\n}\n\nconst RowBuilder = ({row, col}:rowBuilderProp) => {\n  const eachRow = []\n  for(let i=0; i<col; i++)\n    eachRow.push(<div><Box row={row} col={i} color={Math.floor(Math.random()*16777215).toString(16)} /></div>)\n  \n  return (\n    <div style={{display: \"flex\", flexDirection: \"row\"}}>\n      {eachRow}\n    </div>\n  )\n}\n\nconst MatrixBuilder = ({rows, cols}:matrixProp) => {\n  const items = []\n  for(let i=0; i<rows; i++)\n  {\n    items.push(<RowBuilder row={i} col={cols} />)\n  }\n  return (\n    <div>\n      {items}\n    </div>\n  )\n}\n\nfunction App() {\n  let row=13, col=25;\n  const item = <MatrixBuilder rows={row} cols={col}/>\n  console.log(matrix)\n  const [colorMatrix, changeColor] = useState(matrix)\n  return (\n    <div>\n      {item}\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}